name: Trigger VerixAI Automation Tests

on:
  pull_request:
    types: [closed]
    branches:
      - master # Only trigger when PRs are merged to master branch
  workflow_dispatch: # Allows manual triggering from GitHub UI

env:
  VERIXAI_API_URL: https://dev-verixai-automation.cormetrix.com
  TEST_ENV: dev

jobs:
  trigger-tests:
    runs-on: windows-latest
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Trigger VerixAI Automation Test
        id: trigger-test
        shell: pwsh
        run: |
          # Get commit info
          $COMMIT_MSG = git log -1 --pretty=format:"%s"
          $COMMIT_AUTHOR = git log -1 --pretty=format:"%an"

          # Create payload with only case details
          $payload = @{
            case_details = @{
              title = "Merged PR - $COMMIT_AUTHOR"
              plaintiff_name = "GitHub PR-${{ github.run_id }}"
              medical_provider = "Test Hospital"
              description = "Automated test triggered by merged PR: $COMMIT_MSG"
            }
          } | ConvertTo-Json -Depth 10

          # Save payload to file for debugging
          $payload | Out-File -FilePath test_payload.json

          # Prepare headers
          $headers = @{
            "Content-Type" = "application/json"
          }

          # Add authorization header if token is present
          $apiToken = "${{ secrets.VERIXAI_API_TOKEN }}"
          if ($apiToken -and $apiToken -ne "") {
            $headers["Authorization"] = "Bearer $apiToken"
          }

          # Trigger test
          try {
            $response = Invoke-RestMethod -Uri "${{ env.VERIXAI_API_URL }}/api/run-test?env=${{ env.TEST_ENV }}" -Method Post -Headers $headers -Body $payload

            # Output response for debugging
            Write-Output "Response from API:"
            $response | ConvertTo-Json

            # Get test ID
            $TEST_ID = $response.test_id
            "test_id=$TEST_ID" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
            Write-Output "Triggered test with ID: $TEST_ID"

            # Check if successful
            if (-not $TEST_ID) {
              Write-Output "Failed to trigger test. API response: $($response | ConvertTo-Json)"
              exit 1
            }
          }
          catch {
            Write-Output "Error calling API: $_"
            Write-Output "Status Code: $($_.Exception.Response.StatusCode.value__)"
            Write-Output "Response: $($_.ErrorDetails.Message)"
            exit 1
          }

      # Follow-up steps remain unchanged
